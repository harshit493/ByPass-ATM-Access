/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package basic;

import operation.GetBalance;
import static java.lang.Thread.sleep;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author HARSHIT
 */
public class ProcessingPage extends javax.swing.JFrame {
    ATMDB db,bdb;
    String accno;
    int transid;
    /**
     * Creates new form ProcessingPage
     */
    public ProcessingPage(String acc,int tid) {
        initComponents();
        accno = acc;
        transid = tid;
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(188, 253, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please Wait While Processing ...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel1)
                .addContainerGap(277, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        

        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd"); 
        LocalDateTime ldate = LocalDateTime.now();
        String date = (dtf.format(ldate));
        db = new ATMDB();
        bdb = new ATMDB();
        String query = "SELECT * FROM `withdrawdetails` WHERE `AccNo`='"+accno+"' AND `TransactionID`='"+transid+"' AND `WithdrawDate`='"+date+"'";
        String bquery = "SELECT * FROM `atmcarddetails` WHERE `AccNo`='"+accno+"'";
        int i =1;
        while(i==1){ 
            try{                //System.out.println(query);
                bdb.rs = db.stm.executeQuery(bquery);
                bdb.rs.next();
                int blocked = bdb.rs.getInt("Blocked");
                if(blocked==0){
                    this.setVisible(false);
                    TransactionStatus ts = new TransactionStatus("Your Card Is Blocked...","Sorry For Inconvinience !!!","Please Contact Your Bank / Retry Again Later");
                    ts.setVisible(true);                    
                    break;
                }else{                         
                    db.rs = db.stm.executeQuery(query);
                    db.rs.next();
                    int bpverify = db.rs.getInt("BypassVerified");
                    int atmpinverify = db.rs.getInt("AtmPinVerified");
                    int amount = db.rs.getInt("WithdrawAmount");
                    if(atmpinverify == 0){                    //System.out.println(bpverify);
                        if(bpverify == 1){
                            sleep(1000);
                            int accbal = GetBalance.balance(accno);
                            String update = "UPDATE `accountdetails` SET `AccBalance`= '"+(accbal-amount)+"' WHERE AccNo ='"+accno+"';"; //System.out.println(update);
                            db.stm.executeUpdate(update);
                            update = "UPDATE `withdrawdetails` SET `WithdrawSuccess`='1' WHERE `TransactionID`='"+transid+"' AND`AccNo`='"+accno+"' AND `WithdrawDate`='"+date+"';";  //System.out.println(update);
                            db.stm.executeUpdate(update);
                            this.setVisible(false);
                            TransactionStatus ts = new TransactionStatus("Transaction Approved Successfully...","Rs "+amount,"Please Collect the Cash");
                            ts.setVisible(true);
                            break;
                        }else if(bpverify == -1){
                            this.setVisible(false);
                            TransactionStatus ts = new TransactionStatus("Transaction Request Declined ...","Sorry For Inconvinience !!! ","Please Contact Your Bank / Try Again");
                            ts.setVisible(true);                    
                            break;
                        }
                    }
                    if(bpverify == 0){                    //System.out.println(atmpinverify);
                        if(atmpinverify == 1){
                            sleep(5000);                        
                            int accbal = GetBalance.balance(accno);
                            String update = "UPDATE `accountdetails` SET `AccBalance`= '"+(accbal-amount)+"' WHERE AccNo ='"+accno+"';"; //System.out.println(update);
                            db.stm.executeUpdate(update);
                            update = "UPDATE `withdrawdetails` SET `WithdrawSuccess`='1' WHERE `TransactionID`='"+transid+"' AND`AccNo`='"+accno+"' AND `WithdrawDate`='"+date+"';";                   //System.out.println(update);
                            db.stm.executeUpdate(update);
                            this.setVisible(false);
                            TransactionStatus ts = new TransactionStatus("Transaction Approved Successfully...","Rs "+amount,"Please Collect the Cash");
                            ts.setVisible(true);
                            break;
                        }
                    }
                    sleep(100);
                }
            }catch(Exception e) {
                System.out.println(e);
                break;
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String a = null;
                int b = 0;
                new ProcessingPage(a,b).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
